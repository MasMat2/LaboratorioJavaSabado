{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public @interface CustomAnotation\{\
	String name() default \'93Jane\'94;\
	int count() default 999;\
	String[] tags() default \{\'93Java\'94, \'93Script\'94\}\
\}\
\
@Inheretied\
@Reflection(RetentionPolicy.RUNTIME)\
@Target(ElementType.TYPE)\
Acc\'e8s annotation used in a class at runtime via java reflection\
\
\
public enum Priority\{\
	low, medium, high\
\}\
Priority priority() default Priority.MEDIUM\
\
String[] tags() default \'93\'94;\
String createdBy() default \'93Mick\'94;\
String lastModified() default \'9307/03/2018\'94;\
\}\
\
\
To acc\'e8s annotation elements first we get the annotation from the object where it was used\
Annotation annotation = obj.getAnnotation(CustomAnnotation.class);\
CustomAnnotation custom =  (CustomAnnotation) annotation;\
then we can access its elements\
custom.element()\
\
Acc\'e8s annotation from methods\
for(Method method : obj.getDeclaredMethods())\{\
if(method.isAnnotationPresent(CustomAnnotation.class))\{\
\}\
\}\
\
marca modelo precio\
avanzar\
apagar\
\
-float precio \
-String color \
-String iniciar_Llamada(int num) \
-String iniciar_Llamada(String name) \
-String finalizar_Llammada() \
\
Como los resultados de las simulaciones y los ejemplos fueron pr\'e1cticamente id\'e9nticos a los obtenidos te\'f3ricamente considero que los resultados fueron bastante fiables\
En los ejemplos en los que se midieron los valores del circuito pr\'e1cticamente, tambi\'e9n observamos mucha coherencia entre las mediciones y los c\'e1lculos te\'f3ricos. Pero en estos \'faltimos las discrepancias eran mas grandes aunque aun asi estaban dentro del margen de error. Creo que la practica logro su objetivo ya que aprendimos a usar la ley de Kirchhoff, el m\'e9todo de mallas y el m\'e9todo de nodos como herramientas que nos pueden ayudar mucho a en la simplificaci\'f3n de las ecuaciones que surgen al estudiar un circuito el\'e9ctrico.\
\
Main Contacto[] contact = new Contacto[]; \
Telefono[] tel = new Telefono[]; \
for ()\{ \
    concatc[i] = new Contacto(); \
    contact[i].setNombre("Jorge")\
    contact.setNumber(42352243262); \
    iniciar objeto[] \
    tel.iniciar_Llamada(contact[].getNombre()) \
    tel.iniciar_Llamada(contact.getNumber()) \} \
\
hacer un arreglo de Telefono, 5 elementos e imprimir las propiedades y metodos \
Encender \
IniciarLlamada + variable \
Finalizar Llamada \
Polimorfismo DispositivoElectronico con telefono imprimir los metodos \
\
crear objeto telefono\
llenar atributos de telefono (precio, marca, modelo, color, due\'f1o, contrase\'f1a)\
encender telefono\
\
guardar 5 contactos\
llamar a contactos\
apagar\
\
\
TransporteTerrestre\
@Depracated\
\
Autom\'f3vil\
@Override\
\
Create custom annotation\
@Documented\
}